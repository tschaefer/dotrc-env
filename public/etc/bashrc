# shell is non-interactive, done
if [ -z "$PS1" ]; then
	return
fi

# debugging
#set -x

# get operation system for further action or just fail afterwards :P
case ${OSTYPE} in
	darwin*)
		export OS=Darwin
		;;
	linux*)
		export OS=Linux
		;;
esac

# get bash version info
OIFS=$IFS
IFS="."
set ${BASH_VERSION%%(*}
IFS=$OIFS
export BASH_VERSION_MAJOR=$1
export BASH_VERSION_MINOR=$2
export BASH_VERSION_REVISION=$3

# set path to environment home
if [ ${EUID} -eq 0 ]; then
	case ${OS} in
		Darwin)
			export ENV_HOME=/Users/${SUDO_USER}
			;;
		Linux)
			export ENV_HOME=/home/${SUDO_USER}
			;;
	esac
else
	export ENV_HOME=${HOME}
fi

# set path prefix
case ${OS} in
	Darwin)
		if [ -x /usr/local/bin/brew ]; then
			export PATH_PREFIX=/usr/local
		fi
		if [ -x /opt/local/bin/port ]; then
			export PATH_PREFIX=/opt/local
		fi
		;;
	Linux)
		export PATH_PREFIX=""
		;;
esac


# set path to environment docs
export ENV_DOC=${ENV_HOME}/.env

# set path to public bash docs
if [ -d ${ENV_DOC}/public/etc/bash.d ]; then
	export BASH_DOC=${ENV_DOC}/public/etc/bash.d
fi

# load bash docs
if [ -d ${BASH_DOC} ]; then
	for FILE in prompt options exports functions aliases term; do
		if [ -r ${BASH_DOC}/${FILE} ]; then
		. ${BASH_DOC}/${FILE}
		fi
	done
fi

# set path to local bash docs
if [ -d ${ENV_DOC}/local/etc/bash.d ]; then
	export BASH_DOC_LOCAL=${ENV_DOC}/local/etc/bash.d
fi

# load local bash docs
if [ -d ${BASH_DOC_LOCAL} ]; then
	for FILE in prompt options exports functions aliases term; do
		if [ -r ${BASH_DOC_LOCAL}/${FILE} ]; then
		. ${BASH_DOC_LOCAL}/${FILE}
		fi
	done
fi

# load system bash completion docs
if [ -f ${PATH_PREFIX}/etc/bash_completion ]; then
		. ${PATH_PREFIX}/etc/bash_completion
fi

# load public bash completion docs
if [ -d ${BASH_DOC}/completion.d ]; then
	for FILE in ${BASH_DOC}/completion.d/*; do
		[ \( -f ${FILE} -o -h ${FILE} \) -a -r ${FILE} ] && . ${FILE}
	done
fi

# load local bash completion docs
if [ -d ${BASH_DOC_LOCAL}/completion.d ]; then
	for FILE in ${BASH_DOC_LOCAL}/completion.d/*; do
		[ \( -f ${FILE} -o -h ${FILE} \) -a -r ${FILE} ] && . $i
	done
fi


# vim: set filetype=sh :
