
""" behaviour

" misc
set backspace=2
set nobackup
set backupdir=$HOME/.vim/backup
set directory=$HOME/.vim/swap
set encoding=utf-8 fileencoding=utf-8 termencoding=utf-8
set history=700
set nocompatible
set popt=paper:A4
set runtimepath=$HOME/.vim,$VIMRUNTIME
set sessionoptions=blank,buffers,folds,help,options,tabpages,winsize
set wildmenu
set wildmode=longest,list
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" cursor
set cursorline
set hlsearch
set number
set ruler
set scrolloff=10

" readability
set list
set lcs=extends:»
set lcs+=nbsp:·
set lcs+=precedes:«
set lcs+=trail:·
set lcs+=tab:»·

" code style
set autoindent
set smartindent
set wrap
set noexpandtab
set shiftwidth=4
set tabstop=4
set textwidth=78
set linebreak

" status, command line
set cmdheight=2
set laststatus=2
set statusline=%f\ (%{&ff})\ (%Y)\ [%{strftime(\"%d/%m/%y\ -\ %H:%M\")}]\ [%l,%v]\ [%p%%]\ %m%r%h


""" appearance

" syntax
syntax on
if &term != 'linux'
	set t_Co=256
	set background=dark
	colorscheme solarized
endif

" files
filetype plugin indent on

" readability
if exists('+colorcolumn')
	let &colorcolumn=join(range(81,81),",")
	highlight ColorColumn ctermbg=235 guibg=#2c2d27
else
	autocmd BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif


""" mappings

" compile errors
map <F5> :cprev <CR>
map <F6> :cnext <CR>

" searching
noremap <F4> :set hlsearch! hlsearch?<CR>

" tagbar
map <F8> :Tagbar<CR>

" navigation
nmap ä gt
nmap ö gT

" shell
set shell=/bin/bash\ --rcfile\ ~/.vim/bashrc


""" plugin configuration

" syntastic
let g:syntastic_perl_checkers = ['perl']
let g:syntastic_enable_perl_checker = 1
let local_perl_lib_path = $PWD . '/lib'
let g:syntastic_perl_lib_path = [local_perl_lib_path]

" pathogen
execute pathogen#infect()

" nerdtree
let g:nerdtree_tabs_open_on_console_startup=1


""" extras

" local host vimrc
let b:includefile = $HOME . "/.env/local/etc/vimrc"
if (filereadable(b:includefile))
	exe 'source' b:includefile
endif
