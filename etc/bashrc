## non-interactive shell
if [[ $- != *i* ]]; then
    return
fi

## debugging
#set -x

## OS
case ${OSTYPE} in
    darwin*)
        ENV_OS=Darwin
        ENV_USER=${SUDO_USER:-${USER}}
        ;;
    linux*)
        ENV_OS=Linux
        ENV_USER=$(stat -c %U $(readlink -f /proc/self/fd/0))
        ;;
    solaris*)
        ENV_OS=Solaris
        ENV_USER=${SUDO_USER:-${USER}}
        ;;
    *)
        ENV_OS=${OSTYPE}
        ENV_USER=${SUDO_USER:-${USER}}
        ;;
esac

## home
ENV_HOME=${HOME}
if [[ ${EUID} -eq 0 ]]; then
    ENV_HOME=$(grep "^${ENV_USER}:" /etc/passwd | cut -d: -f 6)
    if [[ -z ${ENV_HOME} ]]; then
        ENV_HOME=$(eval echo ~${ENV_USER})
    fi
fi

## exports
ENV_HOME_BASH=${ENV_HOME}/.bash
export ENV_OS ENV_USER ENV_HOME ENV_HOME_BASH

## bash
if [ -d ${ENV_HOME_BASH} ]; then
    for FILE in format colors prompt options functions exports aliases term \
        completion hosts marks; do
        if [[ -r ${ENV_HOME_BASH}/${FILE} ]]; then
        . ${ENV_HOME_BASH}/${FILE}
        fi
    done
fi

## perlbrew
if [[ -r ${ENV_HOME}/.perlbrew/etc/bashrc ]]; then
    . ${ENV_HOME}/.perlbrew/etc/bashrc
    export PERLBREW_HOME=${ENV_HOME}/.perlbrew
fi

## nvm
if [[ -d ${ENV_HOME}/.nvm ]]; then
    export NVM_DIR="$ENV_HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
fi

## direnv
eval "$(direnv hook bash)"

## debuging
#set +x

# vim:ft=sh
