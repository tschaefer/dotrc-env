## ssh / scp
function _ssh_conf {
    SSH_HOME=${ENV_HOME}/.ssh
    cat ${SSH_HOME}/config.global $(ls ${SSH_HOME}/config.local \
        2>/dev/null || echo /dev/null) | grep -v "^#" > ${SSH_HOME}/config
}

function _ssh_screen {
    ssh $@ -t screen -Rd
}

function _ssh_sock {
    SSH_AUTH_SOCK=$(find /tmp -maxdepth 2 -type s -name "agent*" -user $USER \
        -printf '%T@ %p\n' 2>/dev/null |sort -n|tail -1|cut -d' ' -f2)
    export SSH_AUTH_SOCK
}


## python
function _pip2_up {
    pip2 install --user --upgrade $(pip2 list --user --format=columns | \
        awk 'FNR > 2 {print $1 }')
}

function _pip3_up {
    pip3 install --user --upgrade $(pip3 list --user --format=columns | \
        awk 'FNR > 3 {print $1 }')
}

## misc
function _apt_security() {
    local update="sudo apt-get update; sudo apt-get -s dist-upgrade | \
        awk '/^Inst.*[S|s]ecuri/ { print $2 }' | xargs sudo apt-get install; \
        sudo apt-get clean; sudo apt-get autoclean"
    if [[ -n "${1}" ]]; then
        ssh ${1} "${update}"
    else
        eval ${update}
    fi
}

function _calc {
    echo "$1" | bc
}

function _find_norev {
    [ $# -eq 1 ] && {
        find . -type d -a -name ".svn" -prune -o -type d -a -name ".git" -prune \
            -o -name "$1" -print
    }
    [ $# -gt 1 ] && {
        name=$1
        shift
        find . -type d -a -name ".svn" -prune -o -type d -a -name ".git" -prune \
            -o -name "$name" $@
    }
}

function _ps_grep {
    ps -e -o pid,cmd | grep "$1" | grep -v grep
}

function _tinyurl {
    curl -L -k -s -w "\n" http://tinyurl.com/api-create.php?url=${1}
}

function _wttr() {
    curl -H "Accept-Language: ${LANG%_*}" wttr.in/"${1:-Mainz}?{$2:-0}"
}

# vim:ft=sh
