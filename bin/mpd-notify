#!/usr/bin/env python

import hashlib
import mpd
import socket
import subprocess
import sys
import time

MPD_HOST = 'localhost'
MPD_PORT = 6600
POLL_INTERVAL = 0.5
SLEEP_INTERVAL = 5

def notify(song):
    if song['file'].startswith('http'):
        summary = song['name']
        body = ''
    else:
        summary = song['title']
        body = song['artist']

    subprocess.check_call(['/usr/bin/notify-send', '-u', 'low', '-t', '3000', summary, body, '-i', 'audio-volume-high'])

def observe(mpc):
    sha = None
    while True:
        if mpc.status()['state'] in ['pause', 'play']:
            song = mpc.currentsong()
            _sha = hashlib.sha256(str(song))
            if not sha or sha.hexdigest() != _sha.hexdigest():
                sha = _sha
                notify(song)
        time.sleep(POLL_INTERVAL)

def run():
    while True:
        try:
            mpc = mpd.MPDClient()
            mpc.connect(MPD_HOST, MPD_PORT)
            observe(mpc)
        except KeyboardInterrupt:
            sys.exit()
        except (socket.error, mpd.ConnectionError):
            time.sleep(SLEEP_INTERVAL)

if __name__ == '__main__':
    run()
